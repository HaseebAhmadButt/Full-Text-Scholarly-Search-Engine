spring.application.name=api-gateway
server.port=8765

# Registering in Eureka Client
eureka.client.service-url.default-zone = http://localhost:8761/eureka
#Enabling Spring Cloud Discovery Locator
spring.cloud.gateway.discovery.locator.enabled=true


# Different Properties to enable CORS on API Gateway
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.default-filters=DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:3000
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*



#spring.cloud.gateway.globalcors.cors-configurations.[/**].
#Storing API-gateway in Eureka Server
#eureka.client.service-url.default-zone = http://localhost:8761/eureka
#Read the purpose of API Gateway from File_1_API_Gateway.java in notes
#Now, since we have created the API gateway, we want to access the microservices through the API gateway
#Spring Cloud provides easy access to create URLs based on API Gateway, follow the below steps
# Step#1: Start with location of API Gateway, which is 'http://localhost:8765' in this case.
# Step#2: Add the name of the microservice, which is 'CURRENCY-EXCHANGE-SERVICE' or 'CURRENCY-CONVERSION-SERVICE' in this case.
#         This is the name of the microservice as mentioned in the application.properties file of the microservice and
#         eureka server.
# Step#3: Add the URI of the controller, which is want to execute.
# Step#4: Add the parameters, if any.
# Finalized URL: {API Gateway Location}'http://localhost:8765'/{Service Name on Eureka Server}CURRENCY-EXCHANGE-SERVICE/
#                {URI on controller}currency-exchange/from/USD/to/INR

#Now, we can access the microservices through the API gateway
#The URI's for Currency Exchange Service and Currency Conversion Service are as follows:
# Currency Conversion
#http://localhost:8765/CURRENCY-CONVERSION-SERVICE/currency-conversion-feign/from/USD/to/INR/quantity/10
#http://localhost:8765/CURRENCY-CONVERSION-SERVICE/currency-conversion/from/USD/to/INR/quantity/10

# Currency Exchange
#http://localhost:8765/CURRENCY-EXCHANGE-SERVICE/currency-exchange/from/USD/to/INR

#Spring Cloud Gateway will produce this URL for us, we just need to add the parameters and enable it
#using the below configuration

#spring.cloud.gateway.discovery.locator.enabled=true

#Enable for LowerCase URL

#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#Now, we can access the microservices through the API gateway